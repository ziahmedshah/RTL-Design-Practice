module tb_memory_47x64K;
    logic        clk;
    logic        rst_n;
    logic        wr_strobe, rd_strobe;
    logic [15:0] wr_addr, rd_addr;
    logic [46:0] wr_data;
    logic [46:0] rd_data;

    // Instantiate the DUT
    memory_47x64K dut (
        .clk(clk),
        .rst_n(rst_n),
        .wr_strobe(wr_strobe),
        .wr_addr(wr_addr),
        .wr_data(wr_data),
        .rd_strobe(rd_strobe),
        .rd_addr(rd_addr),
        .rd_data(rd_data)
    );

    // Clock Generation: 10 ns period
    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // 50 MHz clock
    end

    // Test Procedure
    initial begin
        // Reset the design
        rst_n = 0;
        wr_strobe = 0;
        rd_strobe = 0;
        #10 rst_n = 1;  // Release reset

        // Write Data to Bank 0, Address 0x0001
        wr_addr = 16'h0001;
        wr_data = 47'h123456789ABCD;
        wr_strobe = 1;
        #10 wr_strobe = 0;

        // Read from the same address
        rd_addr = 16'h0001;
        rd_strobe = 1;
        #10 rd_strobe = 0;

        // Wait 5 cycles (50 ns) for the delayed read
        #50;
        if (rd_data == 47'h123456789ABCD) begin
            $display("Read successful! Data: %h", rd_data);
        end else begin
            $display("Read failed! Expected: 123456789ABCD, Got: %h", rd_data);
        end

        $finish;
    end
endmodule
